// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: dice_roll.proto

package proto_dice_roll

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientSeed    string                 `protobuf:"bytes,1,opt,name=client_seed,json=clientSeed,proto3" json:"client_seed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_dice_roll_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dice_roll_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_dice_roll_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSessionRequest) GetClientSeed() string {
	if x != nil {
		return x.ClientSeed
	}
	return ""
}

type CreateSessionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SessionId      string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ServerSeedHash string                 `protobuf:"bytes,2,opt,name=server_seed_hash,json=serverSeedHash,proto3" json:"server_seed_hash,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_dice_roll_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dice_roll_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_dice_roll_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CreateSessionResponse) GetServerSeedHash() string {
	if x != nil {
		return x.ServerSeedHash
	}
	return ""
}

type PlayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayRequest) Reset() {
	*x = PlayRequest{}
	mi := &file_dice_roll_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayRequest) ProtoMessage() {}

func (x *PlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dice_roll_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayRequest.ProtoReflect.Descriptor instead.
func (*PlayRequest) Descriptor() ([]byte, []int) {
	return file_dice_roll_proto_rawDescGZIP(), []int{2}
}

func (x *PlayRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type PlayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt     string                 `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	ServerRoll    int32                  `protobuf:"varint,2,opt,name=serverRoll,proto3" json:"serverRoll,omitempty"`
	PlayerRoll    int32                  `protobuf:"varint,3,opt,name=playerRoll,proto3" json:"playerRoll,omitempty"`
	Winner        string                 `protobuf:"bytes,4,opt,name=winner,proto3" json:"winner,omitempty"`
	Roller        string                 `protobuf:"bytes,5,opt,name=roller,proto3" json:"roller,omitempty"`
	ServerSeed    string                 `protobuf:"bytes,6,opt,name=server_seed,json=serverSeed,proto3" json:"server_seed,omitempty"`          // Раскрытый после броска
	ClientSeed    string                 `protobuf:"bytes,7,opt,name=client_seed,json=clientSeed,proto3" json:"client_seed,omitempty"`          // Использованный клиентский seed
	Nonce         int32                  `protobuf:"varint,8,opt,name=nonce,proto3" json:"nonce,omitempty"`                                     // Уникальный счетчик для броска
	GeneratorUsed string                 `protobuf:"bytes,9,opt,name=generator_used,json=generatorUsed,proto3" json:"generator_used,omitempty"` // Имя генератора (напр., "crypto_sha256")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayResponse) Reset() {
	*x = PlayResponse{}
	mi := &file_dice_roll_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayResponse) ProtoMessage() {}

func (x *PlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dice_roll_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayResponse.ProtoReflect.Descriptor instead.
func (*PlayResponse) Descriptor() ([]byte, []int) {
	return file_dice_roll_proto_rawDescGZIP(), []int{3}
}

func (x *PlayResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PlayResponse) GetServerRoll() int32 {
	if x != nil {
		return x.ServerRoll
	}
	return 0
}

func (x *PlayResponse) GetPlayerRoll() int32 {
	if x != nil {
		return x.PlayerRoll
	}
	return 0
}

func (x *PlayResponse) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

func (x *PlayResponse) GetRoller() string {
	if x != nil {
		return x.Roller
	}
	return ""
}

func (x *PlayResponse) GetServerSeed() string {
	if x != nil {
		return x.ServerSeed
	}
	return ""
}

func (x *PlayResponse) GetClientSeed() string {
	if x != nil {
		return x.ClientSeed
	}
	return ""
}

func (x *PlayResponse) GetNonce() int32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *PlayResponse) GetGeneratorUsed() string {
	if x != nil {
		return x.GeneratorUsed
	}
	return ""
}

type VerifyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerSeed    string                 `protobuf:"bytes,1,opt,name=server_seed,json=serverSeed,proto3" json:"server_seed,omitempty"`
	ClientSeed    string                 `protobuf:"bytes,2,opt,name=client_seed,json=clientSeed,proto3" json:"client_seed,omitempty"`
	Nonce         int32                  `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GeneratorName string                 `protobuf:"bytes,4,opt,name=generator_name,json=generatorName,proto3" json:"generator_name,omitempty"`
	ExpectedRoll  int32                  `protobuf:"varint,5,opt,name=expected_roll,json=expectedRoll,proto3" json:"expected_roll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	mi := &file_dice_roll_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dice_roll_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_dice_roll_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyRequest) GetServerSeed() string {
	if x != nil {
		return x.ServerSeed
	}
	return ""
}

func (x *VerifyRequest) GetClientSeed() string {
	if x != nil {
		return x.ClientSeed
	}
	return ""
}

func (x *VerifyRequest) GetNonce() int32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *VerifyRequest) GetGeneratorName() string {
	if x != nil {
		return x.GeneratorName
	}
	return ""
}

func (x *VerifyRequest) GetExpectedRoll() int32 {
	if x != nil {
		return x.ExpectedRoll
	}
	return 0
}

type VerifyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsValid       bool                   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	mi := &file_dice_roll_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dice_roll_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_dice_roll_proto_rawDescGZIP(), []int{5}
}

func (x *VerifyResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

var File_dice_roll_proto protoreflect.FileDescriptor

const file_dice_roll_proto_rawDesc = "" +
	"\n" +
	"\x0fdice_roll.proto\x12\tdice_roll\"7\n" +
	"\x14CreateSessionRequest\x12\x1f\n" +
	"\vclient_seed\x18\x01 \x01(\tR\n" +
	"clientSeed\"`\n" +
	"\x15CreateSessionResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12(\n" +
	"\x10server_seed_hash\x18\x02 \x01(\tR\x0eserverSeedHash\",\n" +
	"\vPlayRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\x9b\x02\n" +
	"\fPlayResponse\x12\x1c\n" +
	"\tcreatedAt\x18\x01 \x01(\tR\tcreatedAt\x12\x1e\n" +
	"\n" +
	"serverRoll\x18\x02 \x01(\x05R\n" +
	"serverRoll\x12\x1e\n" +
	"\n" +
	"playerRoll\x18\x03 \x01(\x05R\n" +
	"playerRoll\x12\x16\n" +
	"\x06winner\x18\x04 \x01(\tR\x06winner\x12\x16\n" +
	"\x06roller\x18\x05 \x01(\tR\x06roller\x12\x1f\n" +
	"\vserver_seed\x18\x06 \x01(\tR\n" +
	"serverSeed\x12\x1f\n" +
	"\vclient_seed\x18\a \x01(\tR\n" +
	"clientSeed\x12\x14\n" +
	"\x05nonce\x18\b \x01(\x05R\x05nonce\x12%\n" +
	"\x0egenerator_used\x18\t \x01(\tR\rgeneratorUsed\"\xb3\x01\n" +
	"\rVerifyRequest\x12\x1f\n" +
	"\vserver_seed\x18\x01 \x01(\tR\n" +
	"serverSeed\x12\x1f\n" +
	"\vclient_seed\x18\x02 \x01(\tR\n" +
	"clientSeed\x12\x14\n" +
	"\x05nonce\x18\x03 \x01(\x05R\x05nonce\x12%\n" +
	"\x0egenerator_name\x18\x04 \x01(\tR\rgeneratorName\x12#\n" +
	"\rexpected_roll\x18\x05 \x01(\x05R\fexpectedRoll\"+\n" +
	"\x0eVerifyResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid2\xe1\x01\n" +
	"\x0fDiceRollGameAPI\x12R\n" +
	"\rCreateSession\x12\x1f.dice_roll.CreateSessionRequest\x1a .dice_roll.CreateSessionResponse\x127\n" +
	"\x04Play\x12\x16.dice_roll.PlayRequest\x1a\x17.dice_roll.PlayResponse\x12A\n" +
	"\n" +
	"VerifyRoll\x12\x18.dice_roll.VerifyRequest\x1a\x19.dice_roll.VerifyResponseB\x11Z\x0fproto.dice_rollb\x06proto3"

var (
	file_dice_roll_proto_rawDescOnce sync.Once
	file_dice_roll_proto_rawDescData []byte
)

func file_dice_roll_proto_rawDescGZIP() []byte {
	file_dice_roll_proto_rawDescOnce.Do(func() {
		file_dice_roll_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dice_roll_proto_rawDesc), len(file_dice_roll_proto_rawDesc)))
	})
	return file_dice_roll_proto_rawDescData
}

var file_dice_roll_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dice_roll_proto_goTypes = []any{
	(*CreateSessionRequest)(nil),  // 0: dice_roll.CreateSessionRequest
	(*CreateSessionResponse)(nil), // 1: dice_roll.CreateSessionResponse
	(*PlayRequest)(nil),           // 2: dice_roll.PlayRequest
	(*PlayResponse)(nil),          // 3: dice_roll.PlayResponse
	(*VerifyRequest)(nil),         // 4: dice_roll.VerifyRequest
	(*VerifyResponse)(nil),        // 5: dice_roll.VerifyResponse
}
var file_dice_roll_proto_depIdxs = []int32{
	0, // 0: dice_roll.DiceRollGameAPI.CreateSession:input_type -> dice_roll.CreateSessionRequest
	2, // 1: dice_roll.DiceRollGameAPI.Play:input_type -> dice_roll.PlayRequest
	4, // 2: dice_roll.DiceRollGameAPI.VerifyRoll:input_type -> dice_roll.VerifyRequest
	1, // 3: dice_roll.DiceRollGameAPI.CreateSession:output_type -> dice_roll.CreateSessionResponse
	3, // 4: dice_roll.DiceRollGameAPI.Play:output_type -> dice_roll.PlayResponse
	5, // 5: dice_roll.DiceRollGameAPI.VerifyRoll:output_type -> dice_roll.VerifyResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dice_roll_proto_init() }
func file_dice_roll_proto_init() {
	if File_dice_roll_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dice_roll_proto_rawDesc), len(file_dice_roll_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dice_roll_proto_goTypes,
		DependencyIndexes: file_dice_roll_proto_depIdxs,
		MessageInfos:      file_dice_roll_proto_msgTypes,
	}.Build()
	File_dice_roll_proto = out.File
	file_dice_roll_proto_goTypes = nil
	file_dice_roll_proto_depIdxs = nil
}
